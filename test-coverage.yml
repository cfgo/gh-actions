name: Coverage

on:  
  pull_request:
    branches:
      - master

jobs:
  coverage:
    runs-on: windows-latest
    steps:
      - name: Wait for check
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: R-CMD-check
          ref: github.event.pull_request.head.sha
          timeoutSeconds: 3600
          intervalSeconds: 300
        
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: '3.6.3'
      - uses: r-lib/actions/setup-pandoc@master
        
      - name: Query dependencies
        if: steps.wait-for-build.outputs.conclusion == 'success'
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: success()
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: windows-r-3.6-${{ hashFiles('depends.Rds') }}
          restore-keys: windows-r-3.6-

      - name: Install code coverage dependencies
        if: success()
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}
        
      # 1. Upload test coverage
      - name: Calculate and upload coverage
        if: success()
        run: |
          coverage <- covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
          stopifnot(coverage$uploaded)
        shell: Rscript {0}

      # 2. Render Vignettes and README
      - name: Install package dependencies
        if: success()
        run: |
          remotes::install_cran("rmarkdown")
          remotes::install_github("${{github.repository}}")
        shell: Rscript {0}

      - name: Render CodeCov Vignette
        if: success()
        run: |
          rmarkdown::render("vignettes/codecov.Rmd")
        shell: Rscript {0}

      - name: Render README
        if: success()
        run: |
          rmarkdown::render("./README.Rmd")
        shell: Rscript {0}

      - name: Commit and push results
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit README.md vignettes/codecov.html -m 'Re-build Vignettes and README' || echo "No changes to commit"
          git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:${{ github.ref }} || echo "No changes to commit"
          
    env:	
      GITHUB_PAT: ${{ secrets.GITHUB_PAT }}	
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}  
